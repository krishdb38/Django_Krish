[
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "generic",
        "importPath": "django.views",
        "description": "django.views",
        "isExtraImport": true,
        "detail": "django.views",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "RedirectView",
        "importPath": "django.views.generic",
        "description": "django.views.generic",
        "isExtraImport": true,
        "detail": "django.views.generic",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "catalog.migrations.0001_initial",
        "description": "catalog.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Author',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('first_name', models.CharField(max_length=100)),",
        "detail": "catalog.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "AuthorAdmin",
        "kind": 6,
        "importPath": "catalog.admin",
        "description": "catalog.admin",
        "peekOfCode": "class AuthorAdmin(admin.ModelAdmin):\n    list_display = (\"last_name\", \"first_name\", \"date_of_birth\", \"date_of_death\")\n    fields = [\"first_name\", \"last_name\", ('date_of_birth', \"date_of_death\")]\n@admin.register(Book)\nclass BookAdmin(admin.ModelAdmin):\n    pass\nclass BookAdmin(admin.ModelAdmin):\n    list_display = (\"title\", \"author\", \"display_genre\")\n@admin.register(BookInstance)\nclass BookInstanceAdmin(admin.ModelAdmin):",
        "detail": "catalog.admin",
        "documentation": {}
    },
    {
        "label": "BookAdmin",
        "kind": 6,
        "importPath": "catalog.admin",
        "description": "catalog.admin",
        "peekOfCode": "class BookAdmin(admin.ModelAdmin):\n    pass\nclass BookAdmin(admin.ModelAdmin):\n    list_display = (\"title\", \"author\", \"display_genre\")\n@admin.register(BookInstance)\nclass BookInstanceAdmin(admin.ModelAdmin):\n    list_filter = ('status', \"due_back\")\n    fieldsets = (\n        (None, {\n            'fields': ('book', 'imprint', 'id')",
        "detail": "catalog.admin",
        "documentation": {}
    },
    {
        "label": "BookAdmin",
        "kind": 6,
        "importPath": "catalog.admin",
        "description": "catalog.admin",
        "peekOfCode": "class BookAdmin(admin.ModelAdmin):\n    list_display = (\"title\", \"author\", \"display_genre\")\n@admin.register(BookInstance)\nclass BookInstanceAdmin(admin.ModelAdmin):\n    list_filter = ('status', \"due_back\")\n    fieldsets = (\n        (None, {\n            'fields': ('book', 'imprint', 'id')\n        }),\n        ('Availability', {",
        "detail": "catalog.admin",
        "documentation": {}
    },
    {
        "label": "BookInstanceAdmin",
        "kind": 6,
        "importPath": "catalog.admin",
        "description": "catalog.admin",
        "peekOfCode": "class BookInstanceAdmin(admin.ModelAdmin):\n    list_filter = ('status', \"due_back\")\n    fieldsets = (\n        (None, {\n            'fields': ('book', 'imprint', 'id')\n        }),\n        ('Availability', {\n            'fields': ('status', 'due_back')\n        }),\n    )",
        "detail": "catalog.admin",
        "documentation": {}
    },
    {
        "label": "CatalogConfig",
        "kind": 6,
        "importPath": "catalog.apps",
        "description": "catalog.apps",
        "peekOfCode": "class CatalogConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'catalog'",
        "detail": "catalog.apps",
        "documentation": {}
    },
    {
        "label": "Genre",
        "kind": 6,
        "importPath": "catalog.models",
        "description": "catalog.models",
        "peekOfCode": "class Genre(models.Model):\n    \"\"\"\n    Model representing a book genre.\n    Args:\n        models ([type]): [description]\n    \"\"\"\n    name = models.CharField(max_length=200, help_text=\"Enter a book Genre\")\n    def __str__(self):\n        \"String for representinf the Model object\"\n        return self.name",
        "detail": "catalog.models",
        "documentation": {}
    },
    {
        "label": "Book",
        "kind": 6,
        "importPath": "catalog.models",
        "description": "catalog.models",
        "peekOfCode": "class Book(models.Model):\n    \"\"\"Model representing a book (but not a specific copy of a book)\n    Args:\n        models ([type]): [description]\n    \"\"\"\n    title = models.CharField(max_length=200)\n    author = models.ForeignKey('Author', on_delete=models.SET_NULL, null=True)\n    subject = models.TextField(\n        max_length=1000, help_text=\"Enter a brief description of the book\")\n    isbn = models.CharField(\"ISBN\", max_length=13,",
        "detail": "catalog.models",
        "documentation": {}
    },
    {
        "label": "BookInstance",
        "kind": 6,
        "importPath": "catalog.models",
        "description": "catalog.models",
        "peekOfCode": "class BookInstance(models.Model):\n    \"\"\"Model representing a specific copy of a book (i.e. that can be borrowed from the library )\n    Args:\n        models ([type]): [description]\n    \"\"\"\n    id = models.UUIDField(primary_key=True, default=uuid.uuid4,\n                          help_text=\"Unique ID for this particular book \")\n    book = models.ForeignKey(\"Book\", on_delete=models.RESTRICT, null=True)\n    imprint = models.CharField(max_length=200)\n    due_back = models.DateTimeField(null=True, blank=True)",
        "detail": "catalog.models",
        "documentation": {}
    },
    {
        "label": "Author",
        "kind": 6,
        "importPath": "catalog.models",
        "description": "catalog.models",
        "peekOfCode": "class Author(models.Model):\n    \"\"\"Model representing an author\n    Args:\n        models ([type]): [description]\n    \"\"\"\n    first_name = models.CharField(max_length = 100)\n    last_name = models.CharField(max_length = 100)\n    date_of_birth = models.DateTimeField(null=True, blank=True)\n    date_of_death = models.DateTimeField(\"Died\", null=True, blank=True)\n    class Meta:",
        "detail": "catalog.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "catalog.urls",
        "description": "catalog.urls",
        "peekOfCode": "urlpatterns = [path('', views.index , name = \"index\"),\n                path('books/', views.BookListView.as_view(), name = \"books\"),\n                path('book/,int:pk>', views.BookDetailView.as_view(), name = \"book-detail\"),\n]",
        "detail": "catalog.urls",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 6,
            "peekOfCode": "class  BookListView(generic.ListView):\n    model = Book"
        },
        "kind": 6,
        "importPath": "catalog.views",
        "description": "catalog.views",
        "peekOfCode": "class  BookListView(generic.ListView):\n    model = Book",
        "detail": "catalog.views",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "catalog.views",
        "description": "catalog.views",
        "peekOfCode": "def index(request):\n    # Generate counts of some of the main objects\n    num_books = Book.objects.all().count()\n    num_instances = BookInstance.objects.all().count()\n    # Available Books ( status = a)\n    num_instances_available = BookInstance.objects.filter(status__exact ='a').count()\n    # The 'all()' is implied by default.\n    num_authors = Author.objects.count()\n    context = {\n        'num_books': num_books,",
        "detail": "catalog.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "locallibrary.asgi",
        "description": "locallibrary.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "locallibrary.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-3lqm6kmk0vv(75quc^oieci0#=o@xm%!(ze9c$p%=ml2+t0vpj'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-3lqm6kmk0vv(75quc^oieci0#=o@xm%!(ze9c$p%=ml2+t0vpj'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # Add our Application Here",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # Add our Application Here\n    'catalog',\n]",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'locallibrary.urls'",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "ROOT_URLCONF = 'locallibrary.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "WSGI_APPLICATION = 'locallibrary.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/3.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "TIME_ZONE = 'Asia/Seoul'  # Time  Zone\nUSE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "USE_I18N = True\nUSE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "USE_L10N",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "USE_L10N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/3.2/howto/static-files/\nSTATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "STATIC_URL = '/static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "locallibrary.settings",
        "description": "locallibrary.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "locallibrary.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "locallibrary.urls",
        "description": "locallibrary.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('catalog/', include('catalog.urls')),\n    path('', RedirectView.as_view(url='catalog/',\n         permanent=True)),  # To Redirect the\n] + static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)",
        "detail": "locallibrary.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "locallibrary.wsgi",
        "description": "locallibrary.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "locallibrary.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'locallibrary.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]